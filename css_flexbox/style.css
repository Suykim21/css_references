* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.container {
  background-color: #ccc;
  padding: 10px;
  /* aligns side by side */
  display: flex;
  height: 1000px;

  /* 
  
    flex-direction: row - default 
                    row-reverse
                    column
                    column-reverse
  
  */
  flex-direction: row;

  /* 
  
    justify-content:  center - centers all elements 
                      space-between - space is evenly distributed between flex items
                      space-around - space between elment is double the space 
                      space-evenly - space is always the same regardless of margins
                      flex-end - putting items on the right side
                      flex-start - putting items on the left side
  
  */
  justify-content: center;

  /* 
  
    align-item: center - centers vertically regarless of element height
                flex-start - starts on top
                flex-end - aligns on the bottom
                stretch - matches the height of tallest element
                baseline - aligning by text
  
  */
  align-items: center;

  /* 
  
    flex-wrap:  wrap - wrap creates new line when there is less space
  
  */
  flex-wrap: wrap;

  /* 
  
    align-content:  center - center cross axis
                    flex-start - aligns cross axis - rows
                    flex-end - opposite of flex-start
                    stretch - stretches the row, similar to space between
                    space-between - puts one row on top other on bottom
  
  */
  align-content: flex-end;

}

.item {
  background-color: #f1425d;
  padding: 30px;
  margin: 30px;
  color: #fff;
  font-size: 40px;

  /* it grows and occupies available space */
  flex-grow: 1;
}

.i2 {
  height: 200px;
  /*  
    all elements start at 0
    higher the number it goes last vice versa
  */
  order: 1;
  /* 3 times bigger than item flex-grow */
  flex-grow: 3;
}

.i3 {
  order: 2;
  flex-basis: 300px;
  /* 
    1 is default - means it allows to shrink 
    0 does not allow to shrink when responsive
  */
  flex-shrink: 0;

  /*  grow shrink basis */
  flex: 0 0 300px;
}

.i4 {
  /* overrides align-items */
  /* align-self: flex-end; */
  order: -1;
}